{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Notification.js","components/Number.js","components/Persons.js","services/personService.js","App.js","index.js"],"names":["Filter","onChange","text","value","PersonForm","addPerson","inputChangeName","inputChangeNum","newName","newNumber","onSubmit","type","Notification","message","className","Number","person","deleteHandler","name","number","onClick","Persons","filter","persons","list","toLowerCase","indexOf","map","key","baseUrl","axios","get","then","response","data","personToAdd","post","id","delete","personObject","put","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","personService","personList","console","log","messageHandler","setTimeout","event","target","preventDefault","some","p","window","confirm","personToChange","find","toLocaleLowerCase","changedPerson","returnedPerson","catch","error","update","concat","add","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eeadd86e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ( {onChange, text} ) => (\r\n  <input onChange={onChange} value={text}/>\r\n)  \r\n\r\nexport default Filter","import React from 'react'\r\n\r\n// Komponentti PersonForm. Luo form-elementin, johon syötetään uuden henkilön tiedot\r\nconst PersonForm = ({ addPerson, inputChangeName, inputChangeNum, newName, newNumber }) => {\r\n  return (\r\n  <form onSubmit={addPerson}>\r\n    <div>name: <input onChange={inputChangeName} value={newName}/></div>\r\n    <div>number: <input onChange={inputChangeNum} value={newNumber}/></div>\r\n    <div><button type=\"submit\">add</button></div>\r\n  </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ( {message, type} ) => {\r\n    if(message === null) {\r\n      return null\r\n    }\r\n    \r\n   return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n   )\r\n  }\r\n\r\n  export default Notification","import React from 'react'\r\n\r\nconst Number = ({ person, deleteHandler }) => {\r\n  return (\r\n    <div>{person.name} {person.number} <button onClick={deleteHandler}>delete</button></div>\r\n)}\r\n\r\nexport default Number","import React, { useState, useEffect } from 'react'\nimport Number from './Number'\n\n// Komponentti Persons. Palauttaa henkilölistan, joka luodaan Number-komponentin avulla. Ei paras mahdollinen ratkaisu kaikkine välivaiheineen, mutta toimii.\nconst Persons = ({ filter, persons, deleteHandler }) => {\n  // Eritellään personsToShow-muuttujaan kaikki oliot, joiden nimikenttä sisältää hakuehdot. Jos hakukenttä on tyhjä, palautetaan kaikki oliot.\n  const personsToShow = (filter === '') ? persons : \n  persons.filter(person => person.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1)\n  \n  const list = personsToShow.map(person =>\n    <Number key={person.name} person={person} deleteHandler={() => deleteHandler(person)} /> \n  )\n  \n  return (\n    <div>{list}</div>\n  )  \n}\n\nexport default Persons","import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/app/persons'\r\nconst baseUrl = '/app/persons'\r\n\r\nconst getPersons = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst personToServer = (personToAdd) => {\r\n  const request = axios.post(baseUrl, personToAdd)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst removePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request\r\n}\r\n\r\nconst replaceNumber = (personObject) => {\r\n  const request = axios.put(`${baseUrl}/${personObject.id}`, personObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getPersons, personToServer, removePerson, replaceNumber }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport Persons from './components/Persons'\nimport personService from './services/personService'\nimport './index.css'\n\nconst App = () => {\n  // Tilat\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState()\n\n  // Kutsutaan efektin sisältä personServicen getPersons()-funktiota, joka palauttaa koko \n  // nimilistan taulukkona palvelimelta.\n  useEffect(() => {\n    personService.getPersons().then(personList => setPersons(personList))\n    console.log(message)\n  }, [])\n\n  // Input-handlerit\n  const inputChangeName = (event) => setNewName(event.target.value)\n  const inputChangeNum = (event) => setNewNumber(event.target.value)\n  const inputChangeFilter = (event) => setFilter(event.target.value)\n\n  // messageHandler. Asettaa parametrina saadun viestin tilaan funktiolla setMessage, ja kolmen sekunnin \n  // kuluttua asettaa tilaksi null, jolloin viestikenttä poistuu\n  const messageHandler = (message, type) => {    \n    setMessage({message, type})\n    setTimeout(() => {\n      setMessage(null)\n    }, 3000)\n  }\n\n  // Uusi tieto. Jos nimi löytyy ennestään, kutsutaan update-metodia, ja jos ei, kutsutaan add-metodia.\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    // add()-metodi\n    const add = person => {\n      personService.personToServer(person)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        messageHandler(`Added ${returnedPerson.name}`, 'success')\n      })\n      .catch(error => \n        // Pitää laittaa muodossa error.response.data.error.\n        messageHandler(error.response.data.error, 'error')      \n      )\n      setNewName('')\n      setNewNumber('')\n    }\n\n    // update()-metodi\n    const update = () => {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const personToChange = persons.find(p => p.name.toLowerCase() === newName.toLocaleLowerCase())\n        const changedPerson = { ...personToChange, number: newNumber}\n        personService.replaceNumber(changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.id === returnedPerson.id ? returnedPerson : p))\n            messageHandler(`Updated ${returnedPerson.name}`, 'success')\n          })\n          .catch(error => {\n            messageHandler(`Information of ${changedPerson.name} has already been removed from server`, 'error')\n            setPersons(persons.filter(p => p.id !== person.id))\n          })\n      }\n      setNewName('')\n      setNewNumber('')\n    }\n\n    const person = { name: newName, number: newNumber }\n    const duplicate = persons.some(p => p.name.toLowerCase() === newName.toLowerCase())    \n    duplicate ? update() : add(person)\n  }\n\n  // Tapahtumankäsittelijä delete-napille\n  const deleteHandler = person => {\n    if(window.confirm(`Delete ${person.name}?`)) {\n      personService.removePerson(person.id)\n        .then(response => {\n          messageHandler(`${person.name} removed`, 'success')\n          setPersons(persons.filter(p => p.id !== person.id))\n        }).catch(error => console.log(`Removal failed: ${error}`))\n    }\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {message && <Notification message={message.message} type={message.type} />}\n      <Filter onChange={inputChangeFilter} text={filter} />\n      <h3>Add new</h3>\n      <PersonForm \n        addPerson={addPerson} \n        inputChangeName={inputChangeName} \n        inputChangeNum={inputChangeNum}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h3>Numbers</h3>\n      <Persons \n        filter={filter} \n        persons={persons}\n        deleteHandler={deleteHandler}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}